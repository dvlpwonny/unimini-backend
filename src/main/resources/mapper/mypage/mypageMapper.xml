<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unimini.mapper.MyPageMapper">

    <!-- 사용자 정보 조회 -->
    <select id="getUserInfo" resultType="uniMap" parameterType="map">
        SELECT
            USER_ID
            , USER_NAME
            , NICKNAME
            , UNI_NUMBER
            , SUBSTRING(UNI_NUMBER, 3, 2 ) AS UNI_YEAR
            , (
                SELECT
                    DETAIL_CODE_NAME
                FROM TB_DETAIL_CODE B
                WHERE GROUP_CODE = 'GENDER'
                  AND A.GENDER_CODE = B.DETAIL_CODE
            ) AS GENDER_NAME
            , (
                SELECT
                    B.UNI_NAME
                FROM TB_UNI B
                WHERE A.UNI_CODE = B.UNI_CODE
            ) AS UNI_NAME
            , (
                SELECT
                    B.COLLEGE_NAME
                FROM TB_COLLEGE B
                WHERE A.UNI_CODE = B.UNI_CODE
                  AND A.CAMPUS_CODE = B.CAMPUS_CODE
                  AND A.COLLEGE_CODE = B.COLLEGE_CODE
            ) AS COLLEGE_NAME
            , (
                SELECT
                    MAJOR_NAME
                FROM TB_MAJOR B
                WHERE A.UNI_CODE = B.UNI_CODE
                  AND A.CAMPUS_CODE = B.CAMPUS_CODE
                  AND A.COLLEGE_CODE = B.COLLEGE_CODE
                  AND A.MAJOR_CODE = B.MAJOR_CODE
            ) AS MAJOR_NAME
            , UNI_NUMBER
            , CONCAT('/static/image/profile/profile', PROFILE_IMAGE_CODE, '.png') AS PROFILE_IMAGE_CODE
        FROM TB_USER A
        WHERE  A.USER_ID = #{userId}
    </select>

    <!-- 사용자 수정 -->
    <update id="updateUser" parameterType="map">
        UPDATE TB_USER
        SET
        <choose>
            <when test="updateType =='nickname'">
                AND NICKNAME = #{updateValue}
            </when>
            <when test="updateType =='profile'">
                AND PROFILE_IMAGE_CODE = #{updateValue}
            </when>
            <when test="updateType =='password'">
                AND PASSWORD = #{updateValue}
            </when>
            <otherwise>
                AND MOBILE_NO = #{updateValue}
            </otherwise>
        </choose>
        WHERE USER_CODE = #{userCode}
          AND USER_ID = #{userId}
    </update>

    <insert id="setLeaveComment" parameterType="map">
        INSERT INTO TB_OPINION (
            OPINION_CONTENT
            , CREATE_USER
            , UPDATE_USER
            , CREATE_DATE
            , UPDATE_DATE
        ) VALUES (
             #{opinionContent}
            , #{createUser}
            , #{createUser}
            , NOW()
            , NOW()
        )
    </insert>

    <!-- 예정된 밍글 -->
    <select id="getExpectMingle" resultType="uniMap" parameterType="map">
        SELECT
            A.EVENT_CODE
            , A.EVENT_STATUS_CODE
            , A.CATEGORY_CODE
            , A.EVENT_NAME
            , DATE_fORMAT(A.EVENT_START_TIME , '%H:%i') AS EVENT_START_TIME
            , DATE_fORMAT(A.EVENT_END_TIME , '%H:%i') AS EVENT_END_TIME
            , DATE_fORMAT(A.EVENT_START_TIME, "%m월 %d일") AS EVENT_DATE
            , B.HOST_FLAG
            , C.TOT_USER_CNT
            , CASE
                WHEN A.EVENT_START_TIME <![CDATA[<]]> NOW() AND C.TOT_USER_CNT <![CDATA[<]]> A.MINIMUM_PRSNNL
                THEN 'Y'
                ELSE 'N'
            END AS QUIT_FLAG
            , (
                SELECT
                    CONCAT('/static/image/profile/profile', PROFILE_IMAGE_CODE, '.png') AS PROFILE_IMAGE_CODE
                FROM TB_USER D INNER JOIN TB_EVENT_USER_MAPP_GROUP E
                WHERE D.USER_ID = E.USER_ID
                  AND E.EVENT_CODE = A.EVENT_CODE
                  AND HOST_FLAG = 'Y'
            ) AS HOST_PROFILE_IMAGE_CODE
            , IFNULL((
                SELECT
                    ROUND(AVG(EVENT_SCORE), 1)
                FROM TB_EVENT_USER_MAPP_GROUP D
                WHERE D.EVENT_CODE = A.EVENT_CODE
                GROUP BY EVENT_CODE
            ), 0) AS EVENT_SCORE
        FROM TB_EVENT A INNER JOIN TB_EVENT_USER_MAPP_GROUP B ON A.EVENT_CODE = B.EVENT_CODE
            LEFT OUTER JOIN (
                SELECT
                    COUNT(USER_ID) AS TOT_USER_CNT
                    , EVENT_CODE
                FROM TB_EVENT_USER_MAPP_GROUP
                WHERE USER_STATUS_CODE = 'EVTUSRST002'
                GROUP BY EVENT_CODE
            ) C ON A.EVENT_CODE = C.EVENT_CODE
        WHERE B.USER_ID = #{userId}
        AND A.EVENT_TYPE_CODE = 'EVT001'
        AND ((A.EVENT_STATUS_CODE = 'EVTSTS001' OR A.EVENT_STATUS_CODE = 'EVTSTS002')
        AND (B.USER_STATUS_CODE = 'EVTUSRST001' OR B.USER_STATUS_CODE = 'EVTUSRST002' OR B.USER_STATUS_CODE = 'EVTUSRST003')
        AND A.EVENT_END_TIME <![CDATA[>]]> NOW());
    </select>

    <!-- 종료된 밍글 -->
    <select id="getFinishMingle" resultType="uniMap" parameterType="map">
        SELECT
            A.EVENT_CODE
            , A.EVENT_STATUS_CODE
            , A.CATEGORY_CODE
            , A.EVENT_NAME
            , DATE_fORMAT(A.EVENT_START_TIME , '%H:%i') AS EVENT_START_TIME
            , DATE_fORMAT(A.EVENT_END_TIME , '%H:%i') AS EVENT_END_TIME
            , DATE_fORMAT(A.EVENT_START_TIME, "%m월 %d일") AS EVENT_DATE
            , B.HOST_FLAG
            , C.TOT_USER_CNT
            , CASE
                WHEN A.EVENT_START_TIME <![CDATA[<]]> NOW() AND C.TOT_USER_CNT <![CDATA[<]]> A.MINIMUM_PRSNNL
                THEN 'Y'
                ELSE 'N'
            END AS QUIT_FLAG
            , IFNULL((
                SELECT
                    ROUND(AVG(EVENT_SCORE), 1)
                FROM TB_EVENT_USER_MAPP_GROUP D
                WHERE D.EVENT_CODE = A.EVENT_CODE
                GROUP BY EVENT_CODE
            ), 0) AS EVENT_SCORE
            , (
                SELECT
                    CONCAT('/static/image/profile/profile', PROFILE_IMAGE_CODE, '.png') AS PROFILE_IMAGE_CODE
                FROM TB_USER D INNER JOIN TB_EVENT_USER_MAPP_GROUP E
                WHERE D.USER_ID = E.USER_ID
                  AND E.EVENT_CODE = A.EVENT_CODE
                  AND HOST_FLAG = 'Y'
            ) AS HOST_PROFILE_IMAGE_CODE
        FROM TB_EVENT A INNER JOIN TB_EVENT_USER_MAPP_GROUP B ON A.EVENT_CODE = B.EVENT_CODE
            LEFT OUTER JOIN (
                SELECT
                    COUNT(USER_ID) AS TOT_USER_CNT
                    , EVENT_CODE
                FROM TB_EVENT_USER_MAPP_GROUP
                WHERE USER_STATUS_CODE = 'EVTUSRST002'
                GROUP BY EVENT_CODE
            ) C ON A.EVENT_CODE = C.EVENT_CODE
        WHERE B.USER_ID = #{userId}
        AND A.EVENT_TYPE_CODE = 'EVT001'
        AND (A.EVENT_STATUS_CODE = 'EVTSTS003'
        OR A.EVENT_END_TIME <![CDATA[<]]> NOW())
    </select>

    <!-- 밍글 종료하기 -->
    <update id="setMingleStatus" parameterType="map">
        UPDATE TB_EVENT
        SET EVENT_STATUS_CODE = #{eventStatusCode}
        , UPDATE_DATE = NOW()
        , UPDATE_USER = #{updateUser}
        WHERE EVENT_CODE = #{eventCode}
    </update>

    <!-- 별점 주기 -->
    <update id="setRating" parameterType="map">
        UPDATE TB_EVENT_USER_MAPP_GROUP
        SET EVENT_SCORE = #{eventScore}
        , UPDATE_DATE = NOW()
        WHERE EVENT_CODE = #{eventCode}
          AND USER_ID = #{updateUser}
    </update>
</mapper>