<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unimini.mapper.UnityMapper">
    <!-- 카테고리 목록 -->
    <select id="getCategorySort" resultType="uniMap">
        SELECT
            CATEGORY_CODE
            , CATEGORY_NAME
            , CATEGORY_NO
            , USE_FLAG
        FROM TB_CATEGORY
        ORDER BY CATEGORY_NO ASC
    </select>

    <!-- 핀 목록 -->
    <select id="getPinInfo" resultType="uniMap" parameterType="map">
        SELECT
            <choose>
                <when test="eventTypeCode == 'EVT001'">
                    SECTION_CODE
                </when>
                <otherwise>
                    SECTION_CODE
                    , BUILDING_CODE
                </otherwise>
            </choose>
            <if test="eventTypeCode == 'EVT001'">
            , (
                SELECT
                    B.CATEGORY_CODE
                FROM TB_EVENT B
                WHERE A.CATEGORY_CODE = B.CATEGORY_CODE
                ORDER BY EVENT_START_TIME
                LIMIT 1
            ) AS CATEGORY_CODE
            </if>
            , EVENT_TYPE_CODE
        FROM TB_EVENT A
        WHERE 1=1
        <if test="eventTypeCode == 'EVT001'">
            AND DATE_FORMAT(EVENT_START_TIME, "%Y-%m-%d") = CURDATE()
            <if test="categoryCode != null and !categoryCode.equals('')">
                AND CATEGORY_CODE = #{categoryCode}
            </if>
        </if>
        <if test="timeSearch != null and !timeSearch.equals('')">
            AND DATE_FORMAT(EVENT_START_TIME, '%H:%i') > DATE_fORMAT(#{timeSearch}, '%H:%i')
        </if>
        <if test="eventTypeCode != null and !eventTypeCode.equals('')">
            AND EVENT_TYPE_CODE = #{eventTypeCode}
        </if>
        <choose>
            <when test="eventTypeCode == 'EVT001'">
                GROUP BY SECTION_CODE
            </when>
            <otherwise>
                GROUP BY SECTION_CODE, BUILDING_CODE
            </otherwise>
        </choose>
    </select>

    <!-- 밍글 리스트 -->
    <select id="getMingleList" resultType="uniMap" parameterType="map">
        SELECT
            A.EVENT_CODE
            , A.EVENT_NAME
            , A.CATEGORY_CODE
            , A.SECTION_CODE
            , A.BUILDING_CODE
            , A.PLACE_CODE
            , (
                SELECT
                    PLACE_NAME
                FROM TB_PLACE P
                WHERE A.SECTION_CODE = P.SECTION_CODE
                  AND A.BUILDING_CODE = P.BUILDING_CODE
                  AND A.PLACE_CODE = P.PLACE_CODE
            ) AS PLACE_NAME
            , A.EVENT_TYPE_CODE
            , DATE_fORMAT(EVENT_START_TIME, '%H:%i') AS EVENT_START_TIME
            , DATE_fORMAT(EVENT_END_TIME, '%H:%i') AS EVENT_END_TIME
            , DATE_fORMAT(EVENT_START_TIME, "%Y-%m-%d") AS EVENT_DATE
            , CONCAT(DATE_fORMAT(EVENT_START_TIME, '%H:%i'), '~', DATE_fORMAT(EVENT_END_TIME, '%H:%i')) AS EVENT_TIME
            , IFNULL((
                SELECT
                    COUNT(USER_ID) AS TOT_USER_CNT
                FROM TB_EVENT_USER_MAPP_GROUP G
                WHERE A.EVENT_CODE = G.EVENT_CODE
                GROUP BY G.EVENT_CODE
            ),0) AS TOT_PRSNNL
            , IFNULL((
                SELECT
                    IFNULL(COUNT(USER_ID), 0)
                FROM TB_EVENT_USER_MAPP_GROUP G
                WHERE A.EVENT_CODE = G.EVENT_CODE
                 AND G.LIKE_FLAG = 'Y'
                GROUP BY A.EVENT_CODE
            ),0) AS TOT_LIKE
            , MINIMUM_PRSNNL
            , MAXIMUM_PRSNNL
            , CONVERT(DETAIL_INFO USING utf8) AS DETAIL_INFO
        FROM TB_EVENT A
        WHERE A.SECTION_CODE = #{sectionCode}
          AND (A.EVENT_STATUS_CODE = 'EVTSTS001' OR A.EVENT_STATUS_CODE = 'EVTSTS001')
          AND EVENT_TYPE_CODE = 'EVT001'
    </select>

    <!-- 유니존 리스트 -->
    <select id="getUnizoneList" resultType="uniMap" parameterType="map">
        SELECT
            EVENT_CODE
            , EVENT_NAME
            , CATEGORY_CODE
            , SECTION_CODE
            , BUILDING_CODE
            , PLACE_CODE
            , CASE
                WHEN PLACE_CODE = 'PLCE000170'
                    THEN '차츰 (영통구 청명북로7번길 13)'
                WHEN PLACE_CODE = 'PLCE000179'
                    THEN '나니아루프탑 파티룸 (영통구 반달로 32-1 5층)'
                WHEN PLACE_CODE = 'PLCE000144'
                    THEN '나니아라운지 파티룸\n(영통구 반달로35번길 19 지하1층 101호)'
                WHEN PLACE_CODE = 'PLCE000013'
                    THEN '****도예공방 라온제나*****\n(영통구 청명남로 54 이호빌딩 지하1층)'
                WHEN PLACE_CODE = 'PLCE000036'
                    THEN '외국어대학 달콤커피'
                    ELSE ''
                END AS PLACE_NAME
            , A.EVENT_TYPE_CODE
            , DATE_fORMAT(EVENT_START_TIME, '%H:%i') AS EVENT_START_TIME
            , DATE_fORMAT(EVENT_END_TIME, '%H:%i') AS EVENT_END_TIME
            , DATE_fORMAT(EVENT_START_TIME, "%Y-%m-%d") AS EVENT_DATE
            , CONCAT(DATE_fORMAT(EVENT_START_TIME, '%H:%i'), '~', DATE_fORMAT(EVENT_END_TIME, '%H:%i')) AS EVENT_TIME
            , MINIMUM_PRSNNL
            , MAXIMUM_PRSNNL
            , UNIZONE_HOST_NAME
            , UNIZONE_FEE
            , CONVERT(DETAIL_INFO USING utf8) AS DETAIL_INFO
            , (
                SELECT
                    COUNT(*)
                FROM TB_EVENT_USER_MAPP_GROUP B
                WHERE A.EVENT_CODE = B.EVENT_CODE
                 AND B.USER_STATUS_CODE = 'EVTUSRST003'
            ) AS TOT_PRSNNL -- 실참가자
            , IFNULL((
                SELECT
                    IFNULL(COUNT(USER_ID), 0)
                FROM TB_EVENT_USER_MAPP_GROUP G
                WHERE A.EVENT_CODE = G.EVENT_CODE
                 AND G.LIKE_FLAG = 'Y'
                GROUP BY A.EVENT_CODE
            ),0) AS TOT_LIKE
            , IFNULL((
            	SELECT
            		C.LIKE_FLAG
            	FROM TB_EVENT_USER_MAPP_GROUP C
            	WHERE A.EVENT_CODE = C.EVENT_CODE
            	  AND USER_ID = #{userId}
            ),'N') AS LIKE_FLAG
            , IFNULL((
            	SELECT
            		CASE
		                WHEN B.TOT_USER_CNT = A.MINIMUM_PRSNNL
		                    THEN 'WTH003'
		                WHEN C.USER_STATUS_CODE = 'EVTUSRST002' OR C.USER_STATUS_CODE = 'EVTUSRST003'
		                    THEN 'WTH002'
		             	ELSE 'WTH001'
	                END AS WITH_FLAG
            	FROM TB_EVENT_USER_MAPP_GROUP C
            	WHERE A.EVENT_CODE = C.EVENT_CODE
            	  AND USER_ID = #{userId}
            ),'WTH001') AS WITH_FLAG
        FROM TB_EVENT A
        WHERE A.SECTION_CODE = #{sectionCode}
        AND A.BUILDING_CODE = #{buildingCode}
        AND (EVENT_STATUS_CODE = 'EVTSTS001' OR EVENT_STATUS_CODE = 'EVTSTS002')
        AND EVENT_TYPE_CODE = 'EVT002'
    </select>

    <!-- 좋아요 리스트 -->
    <select id="getLikeEventList" resultType="uniMap" parameterType="map">
        SELECT
            A.EVENT_CODE
            , A.EVENT_NAME
            , CATEGORY_CODE
            , A.PLACE_CODE
            , (
                SELECT
                    PLACE_NAME
                FROM TB_PLACE P
                WHERE A.SECTION_CODE = P.SECTION_CODE
                  AND A.BUILDING_CODE = P.BUILDING_CODE
                  AND A.PLACE_CODE = P.PLACE_CODE
            ) AS PLACE_NAME
            , A.EVENT_TYPE_CODE
            , DATE_fORMAT(EVENT_START_TIME, '%H:%i') AS EVENT_START_TIME
            , DATE_fORMAT(EVENT_END_TIME, '%H:%i') AS EVENT_END_TIME
            , CONCAT(DATE_fORMAT(EVENT_START_TIME, '%H:%i'), '~', DATE_fORMAT(EVENT_END_TIME, '%H:%i')) AS EVENT_TIME
            , (
                SELECT
                    COUNT(USER_ID) AS TOT_USER_CNT
                FROM TB_EVENT_USER_MAPP_GROUP G
                WHERE A.EVENT_CODE = G.EVENT_CODE
                GROUP BY A.EVENT_CODE
            ) AS TOT_PRSNNL
            , IFNULL((
                SELECT
                    IFNULL(COUNT(USER_ID), 0)
                FROM TB_EVENT_USER_MAPP_GROUP G
                WHERE A.EVENT_CODE = G.EVENT_CODE
                 AND G.LIKE_FLAG = 'Y'
                GROUP BY A.EVENT_CODE
            ),0) AS TOT_LIKE
            , A.MINIMUM_PRSNNL
            , A.MAXIMUM_PRSNNL
            , A.DETAIL_INFO
        FROM TB_EVENT A INNER JOIN TB_EVENT_USER_MAPP_GROUP B ON A.EVENT_CODE = B.EVENT_CODE
        WHERE B.USER_ID = #{userId}
         AND (A.EVENT_STATUS_CODE = 'EVTSTS001' OR A.EVENT_STATUS_CODE = 'EVTSTS002')
         AND DATE_FORMAT(EVENT_START_TIME, "%Y-%m-%d") >= CURDATE()
         AND B.LIKE_FLAG = 'Y'
    </select>

    <!-- 좋아요 -->
    <insert id="setLikeEvent" parameterType="map">
        INSERT INTO
           TB_EVENT_USER_MAPP_GROUP (
                EVENT_CODE
                , USER_ID
                , LIKE_FLAG
                , CREATE_DATE
                , UPDATE_DATE
                , USE_FLAG
           ) VALUES (
                #{eventCode}
                , #{userId}
                , #{likeFlag}
                , NOW()
                , NOW()
                , 'Y'
           )
           ON
              DUPLICATE KEY
           UPDATE
              LIKE_FLAG = #{likeFlag},
              UPDATE_DATE = NOW();
    </insert>

    <!-- 유니존 함께하기 -->
    <insert id="setWithEvent" parameterType="map">
        INSERT INTO
           TB_EVENT_USER_MAPP_GROUP (
                EVENT_CODE
                , USER_ID
                , USER_STATUS_CODE
                , CREATE_DATE
                , UPDATE_DATE
                , USE_FLAG
           ) VALUES (
                #{eventCode}
                , #{userId}
                , #{userStatusCode}
                , NOW()
                , NOW()
                , 'Y'
           )
           ON
              DUPLICATE KEY
           UPDATE
              USER_STATUS_CODE = #{userStatusCode},
              UPDATE_DATE = NOW()
    </insert>

</mapper>