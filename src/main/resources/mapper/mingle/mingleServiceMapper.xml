<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unimini.mapper.MingleMapper">

	<select id="getAllMingleList" resultType="map">
		 SELECT 
		 	SECTION_CODE
		 	, BUILDING_CODE
		 	, PLACE_CODE
		 	, PLACE_NAME
		 	, PLACE_TYPE_CODE
		 FROM TB_PLACE 
		 WHERE USE_FLAG = 'Y'
	</select>
	
	<select id="getMingleInfo" resultType="map">
		 SELECT
		  TE.EVENT_CODE
		  , TE.EVENT_NAME
		  , TE.EVENT_TYPE_CODE
		  , TE.EVENT_STATUS_CODE
		  , (SELECT CATEGORY_NAME FROM TB_CATEGORY TC WHERE TC.CATEGORY_CODE = TE.CATEGORY_CODE) AS CATEGORY_NAME
		  , TE.CATEGORY_CODE
		  , (SELECT PLACE_NAME FROM TB_PLACE TP WHERE TP.SECTION_CODE = TE.SECTION_CODE AND TP.BUILDING_CODE = TE.BUILDING_CODE AND TP.PLACE_CODE = TE.PLACE_CODE) AS PLACE_NAME		  
		  , TE.PLACE_CODE
		  , TE.MAXIMUM_PRSNNL
		  , TE.MINIMUM_PRSNNL 
		  , (SELECT COUNT(*) FROM TB_EVENT_USER_MAPP_GROUP TEUMG WHERE TEUMG.EVENT_CODE = TE.EVENT_CODE) AS NOW_PRSNNL
		  , TE.EVENT_START_TIME
		  , TE.EVENT_END_TIME
		  , CONVERT(TE.DETAIL_INFO USING UTF8) AS DETAIL_INFO
		  , TE.CREATE_USER
		  , TE.CREATE_DATE
		  , TE.UPDATE_USER
		  , TE.UPDATE_DATE
		 FROM TB_EVENT TE 
		 	WHERE TE.EVENT_CODE = #{eventCode}
		 	 AND TE.USE_FLAG = 'Y'
	 </select>
	 
	 <select id="getMingleUserInfo" resultType="map">
		 SELECT
			M_USER.EVENT_CODE
			, M_USER.USER_ID
			, TU.USER_NAME
			, M_USER.USER_STATUS_CODE
			, M_USER.USER_STATUS_NAME
			, M_USER.LIKE_FLAG
			, M_USER.HOST_FLAG
			, TPI.PROFILE_IMAGE_PATH
		 FROM 
		 	(
			 SELECT 
			  TEUMG.EVENT_CODE
			  , TEUMG.USER_ID
			  , TEUMG.USER_STATUS_CODE
			  , ( SELECT DETAIL_CODE_NAME FROM TB_DETAIL_CODE TDC WHERE TDC.GROUP_CODE = 'EVENTUSERSTATUS' AND TDC.DETAIL_CODE = TEUMG.USER_STATUS_CODE) AS USER_STATUS_NAME
			  , TEUMG.EVENT_SCORE
			  , TEUMG.LIKE_FLAG
			  , TEUMG.HOST_FLAG
			  , TEUMG.CREATE_DATE
			  , TEUMG.UPDATE_DATE
			  FROM TB_EVENT_USER_MAPP_GROUP TEUMG
			  WHERE TEUMG.USE_FLAG = 'Y'
			    AND TEUMG.EVENT_CODE = #{eventCode}
			    AND TEUMG.USER_STATUS_CODE IN ('EVTUSRST001','EVTUSRST003')
			) M_USER, TB_USER TU, TB_PROFILE_IMAGE TPI
		 WHERE M_USER.USER_ID = TU.USER_ID 
		 	AND TU.PROFILE_IMAGE_CODE = TPI.PROFILE_IMAGE_CODE
	 </select>

	<select id="getMingleMyInfo" resultType="map">
		 SELECT
		  TU.USER_ID
		  , TU.USER_NAME
		  , TU.NICKNAME
		  , IF(( 
		  		SELECT 
				  	COUNT(*) 
				FROM TB_EVENT_USER_MAPP_GROUP TEUMG 
				WHERE TEUMG.USER_ID = TU.USER_ID
				  AND TEUMG.USER_STATUS_CODE IN ('EVTUSRST001','EVTUSRST003')
				  AND TEUMG.EVENT_CODE = #{eventCode}
			  )>0,'Y','N') AS IS_IN
			, IF((
		  		SELECT 
				  	COUNT(*)
				FROM TB_EVENT_USER_MAPP_GROUP TEUMG 
				WHERE TEUMG.USER_ID = TU.USER_ID
				  AND TEUMG.EVENT_CODE = #{eventCode}
				  AND TEUMG.LIKE_FLAG = 'Y'
			  )>0,'Y','N') AS IS_LIKE
		 FROM TB_USER TU
		 WHERE TU.USER_ID = #{userId}
	</select>	
	
	<update id="updateMingleLike" parameterType="String">
		INSERT INTO TB_EVENT_USER_MAPP_GROUP (
		  EVENT_CODE
		  , USER_ID
		  , USER_STATUS_CODE
		  , LIKE_FLAG
		  , CREATE_DATE
		  , UPDATE_DATE
		  , USE_FLAG
		 ) VALUES ( 
		  #{isLikeForm_EventCode}
		  , #{isLikeForm_UserId}
		  , 'EVTUSRST004'
		  , #{isLikeForm_Flag}
		  , NOW()
		  , NOW()
		  , 'Y'
		 ) ON DUPLICATE KEY UPDATE 
		   	LIKE_FLAG = #{isLikeForm_Flag}
		   	, UPDATE_DATE = NOW()
	</update>
	
	<update id="updateMingleIn" parameterType="String">
		INSERT INTO TB_EVENT_USER_MAPP_GROUP (
		  EVENT_CODE
		  , USER_ID
		  , USER_STATUS_CODE
		  , CREATE_DATE
		  , UPDATE_DATE
		  , USE_FLAG
		 ) VALUES ( 
		   #{isInForm_EventCode}
		  , #{isInForm_UserId}
		 <if test='"Y".equals(isInForm_Flag)'> 
		  , 'EVTUSRST002'
		 </if>
		 <if test='"N".equals(isInForm_Flag)'>
		  , 'EVTUSRST004'
		 </if>
		  , NOW()
		  , NOW()
		  , 'Y'
		 ) ON DUPLICATE KEY UPDATE 
			 <if test='"Y".equals(isInForm_Flag)'> 
				  USER_STATUS_CODE = 'EVTUSRST002'
			 </if>
			 <if test='"N".equals(isInForm_Flag)'>
				  USER_STATUS_CODE = 'EVTUSRST004'
			 </if>
		   	, UPDATE_DATE = NOW()
	</update>
	
	<select id="getMingleReqUserList" resultType="map">
		 SELECT 
		 	TEUMG.EVENT_CODE
		 	, TEUMG.USER_ID
		 	, TU.USER_NAME
		 	, TPI.PROFILE_IMAGE_PATH
		 FROM TB_EVENT_USER_MAPP_GROUP TEUMG, TB_USER TU, TB_PROFILE_IMAGE TPI
		 WHERE TEUMG.USER_ID = TU.USER_ID 
		  AND TU.PROFILE_IMAGE_CODE = TPI.PROFILE_IMAGE_CODE
		  AND TEUMG.EVENT_CODE = #{eventCode}
		  AND TEUMG.USER_STATUS_CODE = 'EVTUSRST002'
		  AND TEUMG.USE_FLAG = 'Y'
	</select>
	
	<update id="updateMingleAcpt" parameterType="String">
		 UPDATE TB_EVENT_USER_MAPP_GROUP 
			SET 
				<if test='"Y".equals(isAcptForm_Flag)'> 	
				USER_STATUS_CODE = 'EVTUSRST003'
				</if>
				<if test='"N".equals(isAcptForm_Flag)'>
				USER_STATUS_CODE = 'EVTUSRST005'
				</if>
			WHERE EVENT_CODE = #{isAcptForm_EventCode}
			 AND USER_ID = #{isAcptForm_UserId}
	</update>

	<!-- 유니존 어드민 페이지 -->
	<!-- 함께하기 신청자 -->
	<select id="getApplicantUnizone" resultType="uniMap" parameterType="String">
        SELECT
            A.EVENT_CODE
            , (
                SELECT
                    EVENT_NAME
                FROM TB_EVENT C
                WHERE A.EVENT_CODE = C.EVENT_CODE
            ) AS EVENT_NAME
            , A.USER_ID
            , B.NICKNAME
            , B.USER_NAME
            , B.MOBILE_NO
            , B.UNI_NUMBER
            , (
                SELECT
                    C.DETAIL_CODE_NAME
                FROM TB_DETAIL_CODE C
                WHERE C.GROUP_CODE = 'GENDER'
                  AND B.GENDER_CODE = C.DETAIL_CODE
            ) AS GENDER_NAME
            , (
                SELECT
                    MAJOR_NAME
                FROM TB_MAJOR C
                WHERE B.UNI_CODE = C.UNI_CODE
                  AND B.CAMPUS_CODE = C.CAMPUS_CODE
                  AND B.COLLEGE_CODE = C.COLLEGE_CODE
                  AND B.MAJOR_CODE = C.MAJOR_CODE
            ) AS MAJOR_NAME
            , CONCAT('/static/image/profile/profile', B.PROFILE_IMAGE_CODE, '.png') AS PROFILE_IMAGE_CODE
            , DATE_fORMAT(A.UPDATE_DATE, '%Y-%m-%d %H:%i:%s') AS UPDATE_DATE
        FROM TB_EVENT_USER_MAPP_GROUP A INNER JOIN TB_USER B ON A.USER_ID = B.USER_ID
        WHERE USER_STATUS_CODE = 'EVTUSRST002'
          AND EVENT_CODE = #{eventCode}
        ORDER BY A.UPDATE_DATE
    </select>

	<!-- 수락된 신청자 (참가자) -->
	<select id="getParticipantUnizone" resultType="uniMap" parameterType="String">
        SELECT
            A.EVENT_CODE
            , (
                SELECT
                    EVENT_NAME
                FROM TB_EVENT C
                WHERE A.EVENT_CODE = C.EVENT_CODE
            ) AS EVENT_NAME
            , A.USER_ID
            , B.USER_NAME
            , B.MOBILE_NO
            , B.UNI_NUMBER
            , (
                SELECT
                    C.DETAIL_CODE_NAME
                FROM TB_DETAIL_CODE C
                WHERE C.GROUP_CODE = 'GENDER'
                  AND B.GENDER_CODE = C.DETAIL_CODE
            ) AS GENDER_NAME
            , (
                SELECT
                    MAJOR_NAME
                FROM TB_MAJOR C
                WHERE B.UNI_CODE = C.UNI_CODE
                  AND B.CAMPUS_CODE = C.CAMPUS_CODE
                  AND B.COLLEGE_CODE = C.COLLEGE_CODE
                  AND B.MAJOR_CODE = C.MAJOR_CODE
            ) AS MAJOR_NAME
            , CONCAT('/static/image/profile/profile', B.PROFILE_IMAGE_CODE, '.png') AS PROFILE_IMAGE_CODE
            , DATE_fORMAT(A.UPDATE_DATE, '%Y-%m-%d %H:%i:%s') AS UPDATE_DATE
        FROM TB_EVENT_USER_MAPP_GROUP A INNER JOIN TB_USER B ON A.USER_ID = B.USER_ID
        WHERE USER_STATUS_CODE = 'EVTUSRST003'
          AND EVENT_CODE = #{eventCode}
          ORDER BY A.UPDATE_DATE
    </select>

	<!-- 거절된 참가자 -->
	<select id="getRefuseUnizone" resultType="uniMap" parameterType="String">
        SELECT
            A.EVENT_CODE
            , (
                SELECT
                    EVENT_NAME
                FROM TB_EVENT C
                WHERE A.EVENT_CODE = C.EVENT_CODE
            ) AS EVENT_NAME
            , A.USER_ID
            , B.USER_NAME
            , B.MOBILE_NO
            , B.UNI_NUMBER
            , (
                SELECT
                    C.DETAIL_CODE_NAME
                FROM TB_DETAIL_CODE C
                WHERE C.GROUP_CODE = 'GENDER'
                  AND B.GENDER_CODE = C.DETAIL_CODE
            ) AS GENDER_NAME
            , (
                SELECT
                    MAJOR_NAME
                FROM TB_MAJOR C
                WHERE B.UNI_CODE = C.UNI_CODE
                  AND B.CAMPUS_CODE = C.CAMPUS_CODE
                  AND B.COLLEGE_CODE = C.COLLEGE_CODE
                  AND B.MAJOR_CODE = C.MAJOR_CODE
            ) AS MAJOR_NAME
            , CONCAT('/static/image/profile/profile', B.PROFILE_IMAGE_CODE, '.png') AS PROFILE_IMAGE_CODE
            , DATE_fORMAT(A.UPDATE_DATE, '%Y-%m-%d %H:%i:%s') AS UPDATE_DATE
        FROM TB_EVENT_USER_MAPP_GROUP A INNER JOIN TB_USER B ON A.USER_ID = B.USER_ID
        WHERE USER_STATUS_CODE = 'EVTUSRST005'
          AND EVENT_CODE = #{eventCode}
          ORDER BY A.UPDATE_DATE
    </select>

	<update id="setUserStatusCode" parameterType="map">
		 UPDATE TB_EVENT_USER_MAPP_GROUP
		 SET
			USER_STATUS_CODE = #{userStatusCode}
			, UPDATE_DATE = NOW()
		 WHERE USER_ID = #{userId}
		 AND EVENT_CODE = #{eventCode}
	</update>

	<select id="getPlaceList" resultType="uniMap" parameterType="map">
		SELECT
			SECTION_CODE
			, BUILDING_CODE
			, PLACE_CODE
			, PLACE_NAME
			, (
				SELECT
					 B.DETAIL_CODE_NAME
				FROM TB_DETAIL_CODE B
				WHERE GROUP_CODE = 'PCATEGORY'
				  AND B.DETAIL_CODE = A.PLACE_CATEGORY
			) AS PLACE_CATEGORY_NAME
		FROM TB_PLACE A
		WHERE 1=1
		AND (A.PLACE_NAME LIKE CONCAT('%', #{placeText}, '%')
		OR A.RELATION_PLACE_NAME1 LIKE CONCAT('%', #{placeText}, '%'))
	</select>

	<insert id="setMingle" parameterType="map" useGeneratedKeys="true"
			keyProperty="eventCode" keyColumn="EVENT_CODE">
        INSERT INTO TB_EVENT (
        	EVENT_NAME
            , EVENT_TYPE_CODE
            , EVENT_STATUS_CODE
            , CATEGORY_CODE
            , PLACE_CODE
            , BUILDING_CODE
            , SECTION_CODE
            , EVENT_START_TIME
            , EVENT_END_TIME
            , MINIMUM_PRSNNL
            , MAXIMUM_PRSNNL
            , DETAIL_INFO
            , CREATE_USER
            , UPDATE_USER
            , CREATE_DATE
            , UPDATE_DATE
            , USE_FLAG
        ) VALUES (
        	#{eventName}
            , #{eventTypeCode}
            , #{eventStatusCode}
            , #{categoryCode}
            , #{placeCode}
            , #{buildingCode}
            , #{sectionCode}
            , #{eventStartTime}
            , #{eventEndTime}
            , #{mininumPrsnnl}
            , #{maxinumPrsnnl}
            , #{detailInfo}
            , #{createUser}
            , #{createUser}
            , NOW()
            , NOW()
            , 'Y'
        )
    </insert>

	<insert id="setMingleHost" parameterType="map">
		INSERT INTO TB_EVENT_USER_MAPP_GROUP (
		  EVENT_CODE
		  , USER_ID
		  , USER_STATUS_CODE
		  , HOST_FLAG
		  , CREATE_DATE
		  , UPDATE_DATE
		  , USE_FLAG
		 ) VALUES (
		  #{eventCode}
		  , #{userId}
		  , 'EVTUSRST001'
		  , 'Y'
		  , NOW()
		  , NOW()
		  , 'Y'
		 )
	</insert>

	<select id="getTotalMingleList" parameterType="map" resultType="uniMap">
		SELECT
			A.EVENT_CODE
			, A.EVENT_NAME
			, A.EVENT_DATE
			, A.EVENT_START_TIME
			, A.EVENT_END_TIME
			, A.EVENT_START_TIME_HOUR
			, A.CATEGORY_CODE
		FROM (
			SELECT
				EVENT_CODE
				, EVENT_NAME
				, DATE_fORMAT(EVENT_START_TIME, '%H:%i') AS EVENT_START_TIME
				, DATE_fORMAT(EVENT_END_TIME, '%H:%i') AS EVENT_END_TIME
				, DATE_fORMAT(EVENT_START_TIME, '%Y-%m-%d') AS EVENT_DATE
				, DATE_fORMAT(EVENT_START_TIME, '%H:00') AS EVENT_START_TIME_HOUR
				, CATEGORY_CODE
			FROM TB_EVENT
			WHERE EVENT_TYPE_CODE = 'EVT001'
			  AND EVENT_END_TIME >= NOW()
		) A
		WHERE EVENT_DATE = #{eventDate}
	</select>

	<select id="getTotalMingleHourList" parameterType="map" resultType="uniMap">
		SELECT
			A.EVENT_START_TIME_HOUR
		FROM (
			SELECT
				EVENT_CODE
				, EVENT_NAME
				, DATE_fORMAT(EVENT_START_TIME, '%H:%i') AS EVENT_START_TIME
				, DATE_fORMAT(EVENT_END_TIME, '%H:%i') AS EVENT_END_TIME
				, DATE_fORMAT(EVENT_START_TIME, '%Y-%m-%d') AS EVENT_DATE
				, DATE_fORMAT(EVENT_START_TIME, '%H:00') AS EVENT_START_TIME_HOUR
				, CATEGORY_CODE
			FROM TB_EVENT
			WHERE EVENT_TYPE_CODE = 'EVT001'
			  AND EVENT_END_TIME >= NOW()
		) A
		WHERE EVENT_DATE = #{eventDate}
		GROUP BY A.EVENT_START_TIME_HOUR
	</select>
</mapper>